if [ -e /Library ]
then # mac os
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
else # linux
    alias pbcopy='xclip -selection clipboard'
    alias pbpaste='xclip -selection clipboard -o'
fi

export ANDROID_HOME="/usr/lib/android-sdk"
export PATH="$HOME/bin:/usr/local/sbin:$ANDROID_HOME/cmdline-tools/latest/bin:$HOME/Library/Python/3.7/bin/:"$PATH
export PAGER=cat
export EDITOR=emacs
export PS1='\u:\A:\w\$ '
export DATOMIC_HOME=$HOME/bin/datomic-free-0.9.5703
export REORG_IDENTITY=prj/wtd-personal/
export REORG_HOME=prj/reorg.el/

epoch-now() { date +%s; }
from-epoch() { date -r $1 '+%m/%d/%Y:%H:%M:%S'; }
to-epoch() { date -j -f "%Y-%m-%d" "$1" +%s; }
uuidcp() { uuidgen | awk '{print tolower($0)}' | pbcopy; }

latest_tag() { git describe --tags --abbrev=0; }

esq() { curl -s -XGET "$ELASTICSEARCH_READ_URL"/_search -d '{"query": '"$1"'}'; } # eg. esq '{"match_all": {}}' | jq
esqp() { curl -s -XGET "$ELASTICSEARCH_READ_URL"/_search -d '{"query": '"$1"'}'; }
function tacocat () { cat $1; tac $1; }

export CONFLUENT_HOME=$HOME/bin/confluent-1.0
export SCHEMA_DIR=$HOME/schemas
kafka-avro-consume() { $CONFLUENT_HOME/bin/kafka-avro-console-consumer --property schema.registry.url=http://localhost:8081 --zookeeper localhost:2181 --from-beginning --topic $1 | jq; }
alias zookeeper="$CONFLUENT_HOME/bin/zookeeper-server-start $CONFLUENT_HOME/etc/kafka/zookeeper.properties"
alias kafka="$CONFLUENT_HOME/bin/kafka-server-start $CONFLUENT_HOME/etc/kafka/server.properties"
alias schemareg="$CONFLUENT_HOME/bin/schema-registry-start $CONFLUENT_HOME/etc/schema-registry/schema-registry.properties"
alias kafkarestproxy="$CONFLUENT_HOME/bin/kafka-rest-start"



. ~/.bashrc-private

#export NVM_DIR="${XDG_CONFIG_HOME/:-$HOME/.}nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# solution to AirBnB wifi access point dropping internet connection
function stay-connected () {
    while :
    do
        sleep $WIFI_CHECK_INTERVAL
        echo checking connection...
        if ! [ "$(ping -c 1 google.com)" ]
        then
            echo lost connection, attempting to reconnect...
            networksetup -setairportnetwork en0 $WIFI_AP $WIFI_PW
        fi
    done
}

alias internalip="hostname -I | cut -d' ' -f1"

function get-blame-last-updated() {
  git ls-files | while read f ; do echo $f" "$(for y in $(git blame $f --porcelain | grep '^author-time' | perl -p -e 's|author-time (.*)|($x_,$x_,$x_,$x_,$x_,$year) = localtime($1); (1900 + $year) |e') ; do echo $y ; done | sort -nr | head -n 1); done
}

alias sll="/usr/local/opt/gnu-sed/libexec/gnubin/sed '/^.\{2000\}./d'"

export PATH=/opt/homebrew/bin:$PATH

#export PYENV_ROOT="$HOME/.pyenv"
#[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
#eval "$(pyenv init - bash)"
#
## eval "$(pyenv virtualenv-init -)"
#
#export PATH=/home/rplevy/.pyenv/versions/3.10.6/bin:$PATH

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/rplevy/bin/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/rplevy/bin/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/home/rplevy/bin/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/rplevy/bin/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

export PATH=/home/rplevy/bin/llamacpp/build/bin:$PATH
