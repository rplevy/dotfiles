if [ -e /Library ]
then # mac os
    export PATH=$PATH:/usr/local/Cellar/emacs/24.3/bin
    export ANDROID_HOME=$HOME/Library/Android/sdk/
    export ANDROID_NDK_HOME=$HOME/Library/Android/sdk/ndk-bundle/
    export JAVA_HOME=$(/usr/libexec/java_home)
    # . /usr/local/opt/nvm/nvm.sh
else # linux
    alias pbcopy='xclip -selection clipboard'
    alias pbpaste='xclip -selection clipboard -o'
fi

export PATH="$HOME/bin:/usr/local/sbin:$HOME/Library/Android/sdk/tools/bin:$HOME/Library/Python/3.7/bin/:"$PATH
export PAGER=cat
export EDITOR=emacs
export PS1='\u:\A:\w\$ '
export NVM_DIR=$HOME/.nvm
export DATOMIC_HOME=$HOME/bin/datomic-free-0.9.5703

epoch-now() { date +%s; }
from-epoch() { date -r $1 '+%m/%d/%Y:%H:%M:%S'; }
to-epoch() { date -j -f "%Y-%m-%d" "$1" +%s; }
uuidcp() { uuidgen | awk '{print tolower($0)}' | pbcopy; }

latest_tag() { git describe --tags --abbrev=0; }

esq() { curl -s -XGET "$ELASTICSEARCH_READ_URL"/_search -d '{"query": '"$1"'}'; } # eg. esq '{"match_all": {}}' | jq
esqp() { curl -s -XGET "$ELASTICSEARCH_READ_URL"/_search -d '{"query": '"$1"'}'; }

export CONFLUENT_HOME=$HOME/bin/confluent-1.0
export SCHEMA_DIR=$HOME/schemas
kafka-avro-consume() { $CONFLUENT_HOME/bin/kafka-avro-console-consumer --property schema.registry.url=http://localhost:8081 --zookeeper localhost:2181 --from-beginning --topic $1 | jq; }
alias zookeeper="$CONFLUENT_HOME/bin/zookeeper-server-start $CONFLUENT_HOME/etc/kafka/zookeeper.properties"
alias kafka="$CONFLUENT_HOME/bin/kafka-server-start $CONFLUENT_HOME/etc/kafka/server.properties"
alias schemareg="$CONFLUENT_HOME/bin/schema-registry-start $CONFLUENT_HOME/etc/schema-registry/schema-registry.properties"
alias kafkarestproxy="$CONFLUENT_HOME/bin/kafka-rest-start"



. ~/.bashrc-private
