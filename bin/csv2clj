#!/usr/bin/env bash
"exec" "plk" \
       "-Sdeps" \
       "{:deps {testdouble/clojurescript.csv {:mvn/version \"0.3.0\"}}}" \
       "-Ksf" "$0" "$@"

(ns scripts.csv2clj
  "reads a csv file, where the first column is expected to be the
   column definitions.  what is produced is a vector of maps where the
   keys are the column names, with whitespace"
  (:require [clojure.string :as s]
            [cljs.pprint :refer [pprint]]
            [planck.core :refer [slurp *command-line-args* *in* line-seq exit]]
            [testdouble.cljs.csv :as csv]))

(defn last-n-chars [n s]
  (apply str (reverse (take n (reverse s)))))

(defn csv-file-name? [s]
  (= ".csv" (last-n-chars 4 s)))

(defn csv-rows->maps [[col-headings & rows]]
  (map (fn [row]
         (apply hash-map (interleave col-headings row)))
       rows))

(-> (if (csv-file-name? (first *command-line-args*))
      (slurp (first *command-line-args*))
      (do (println "Usage: csv2clj $FILENAME.csv")
          (exit 1)))
    csv/read-csv
    csv-rows->maps
    pprint)
